/*
 * Nokia5110.h
 *
 *  Created on: 21/11/2013
 *      Author: 31103693
 */

#ifndef NOKIA5110_H_
#define NOKIA5110_H_

#include "xspi.h"
#include "xspi_l.h"
#include "xuartlite.h"
#include "xgpio.h"
#include "xparameters.h"

#include "Spi.h"
#include "Image.h"


#define BUFFER_SIZE	4
typedef u8 DataBuffer[BUFFER_SIZE];
u8 WriteBuffer[BUFFER_SIZE];

//static XSpi Spi;
static XGpio ROT, PUSH;
//static XUartLite UartLite;

/*
LCD CONST
*****************************************************
*****************************************************
*/

#define CLOCK			312

#define LCD_WIDTH		84
#define LCD_HEIGHT		48

#define CHAR_LENGTH		6

#define LCD_LED_ON		0x01
#define LCD_LED_OFF		0x00

#define LCD_COMMAND		0x00
#define LCD_DATA		0x01

#define LCD_RST_ON		0x00
#define LCD_RST_OFF		0x01

#define LCD_SCE_ON		0x00
#define LCD_SCE_OFF		0x01

#define BIAS_WIDTH		8
#define VOP_WIDTH		128

/*
FUNCTION HEX SHORTCUT
*****************************************************
P->Powerdown(1 for Powerdown or 0 for Active)
V->Vertical (1 for Vertical or 0 for Horizontal)
H=0->Basic Instruction, H=1->Extended Instruction
*****************************************************
*/
#define P0_V0_H0			0x20
#define P0_V0_H1			0x21
#define P0_V1_H0			0x22
#define P0_V1_H1			0x23
#define P1_V0_H0			0x24
#define P1_V0_H1			0x25
#define P1_V1_H0			0x26
#define P1_V1_H1			0x27

/*
DISPLAY CONTROL HEX SHORTCUT
*****************************************************
*****************************************************
*/
#define DISPLAY_BLANK		0x08
#define DISPLAY_NORMAL		0x0c
#define DISPLAY_FILLED		0x09
#define DISPLAY_INVERSE		0x0d

/*
X/Y ADDRESS HEX SHORTCUT
*****************************************************
*****************************************************
*/
#define X_ADDRESS			0x80
#define Y_ADDRESS			0x40

/*
VLCD temperature HEX SHORTCUT
*****************************************************
*****************************************************
*/
#define VLCD_0				0x04
#define VLCD_1				0x05
#define VLCD_2				0x06
#define VLCD_3				0x07

/*
BIAS SYSTEM / SET VOP ADDRESS HEX SHORTCUT
*****************************************************
*****************************************************
*/
#define BIAS_ADDRESS		0x10
#define VOP_ADDRESS			0x80

/* NOKIA5110_H_ */

/*
DEFAULT RESERVED LCD VARIABLES VALUES SET
*******************************************************
*******************************************************
*/													//*
	/* DATASHEET VALUES *******************************
	***************************************************/
unsigned char functionSet = P0_V0_H0;				//*
													//*
//for H=0 ************								//*
unsigned char displayControl = DISPLAY_NORMAL;		//*
													//*
unsigned char xPos = 0; //0 to 83					//*
unsigned char yPos = 0; //0 to 5					//*
													//*
//for H=1 ************								//*
unsigned char vlcd = VLCD_0;						//*
													//*
unsigned char bias = 3;	//0 to 7					//*
unsigned char vop = 60;	//0 to 127					//*
													//*
	/* SIGNAL VALUES *******************************//*
	***************************************************/
unsigned char signalLED = LCD_LED_ON;				//*
unsigned char signalD_C = LCD_DATA;					//*
unsigned char signalRST = LCD_RST_OFF;				//*
unsigned char signalSCE = LCD_SCE_OFF;				//*
													//*
/*													//*
*******************************************************
*******************************************************
*/

unsigned char data_LCD[LCD_WIDTH-1][LCD_HEIGHT-1];

/*
Main functions
*****************************************************
*/

void LoadSpartan3E(void);

void NK5110Init(void);		//Initialize LCD system with default configurations
void NK5110Setup(			//Setup specific datasheet LCD configurations
	unsigned char s_LED,
	unsigned char s_D_C,
	unsigned char s_RST,
	unsigned char s_SCE,

	unsigned char d_functionSet,
	unsigned char d_displayControl,
	unsigned char d_xPos,
	unsigned char d_yPos,
	unsigned char d_vlcd,
	unsigned char d_bias,
	unsigned char d_vop);
void NK5110Startup(void);	//Default startup system

void LCDClear(int t);		//Clear all screen pixels with delay and return to position (0,0)
void LCDWrite(unsigned char dt, unsigned char command); //Write 8bit hex to Mosi. Can be Data mode or Command mode according to datasheet

void screenClear(void);		//Clear all screen pixels

void printStr(char *s);		//Print a text to LCD screen (max 14 characters per line and max 6 lines)
void printStrBold(char *s);	//Print a bold text to LCD screen
void printBmp(char *s);		//Print a bitmap image array to LCD screen
void printChar(unsigned char c, unsigned char bold); //Print just a character to LCD screen (bold option). This has the same function of printStr/printStrBold, but it more simple
void printBar(int n);		//Print a bar line

void backspace(void);

void newLine(void);			//Jump to a new line
void newBoldLine(void);		//Jump to a new bold line
void boldLine(void);		//Bold current line

void drawEdge(void);		//Draw edge

void moveX(char *s, unsigned char x, unsigned char y, unsigned char d);
void moveY(char *s, unsigned char x, unsigned char y, unsigned char d);

/*
Datasheet LCD functions
*****************************************************
*/
void set_functionSet(unsigned char c);
unsigned char get_functionSet(void);

//for H=0 ************
void display_blank(void);
void display_normal(void);
void display_filled(void);
void display_inverse(void);
void set_displayControl(unsigned char c);
unsigned char get_displayControl(void);

void setXY(unsigned char X, unsigned char Y); //goes to a specific position
unsigned char getX(void);
unsigned char getY(void);

//for H=1 ************
void vlcd_coefficient0(void);
void vlcd_coefficient1(void);
void vlcd_coefficient2(void);
void vlcd_coefficient3(void);
void set_vlcd_coefficient(unsigned char c);
unsigned char get_vlcd_coefficient(void);

void set_bias(unsigned char c);
unsigned char get_bias(void);

void set_vop(unsigned char c);
unsigned char get_vop(void);

/*
Signal functions
*****************************************************
*/
void turn_on_led(void);
void turn_off_led(void);
void set_led(unsigned char c);
unsigned char get_led(void);
void swap_led(void);

void data_mode(void);
void command_mode(void);
void set_mode(unsigned char c);
unsigned char get_mode(void);
void swap_mode(void);

void reset_active(void);
void reset_desactive(void);
void set_reset(unsigned char c);
unsigned char get_reset(void);
void reset(int t);
void swap_reset(void);

void chip_active(void);
void chip_desactive(void);
void set_chip(unsigned char c);
unsigned char get_chip(void);
void swap_chip(void);

/*
Other functions
*****************************************************
*/
int Spi_Data(XSpi *SpiPtr, int data); //SPI Comunication (do not use this function, use LCDWrite instead)

void delay (int t);

const unsigned char nokia8bits [] = {
		0xC0, 0xC0, 0xC0, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xC0, 0xC0, 0xE0, 0xE0, 0xE0, 0xE0,
		0xF0, 0xF0, 0xF0, 0xF0, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xF0, 0xF0, 0xF0, 0xE0, 0xE0, 0xE0, 0xE0,
		0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFD, 0xF9,
		0xF9, 0xF1, 0xF1, 0xF1, 0xE1, 0xE1, 0xC1, 0xC1, 0xC0, 0xC0, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x03, 0x03,
		0x07, 0x0F, 0x0F, 0x1F, 0x1F, 0x1F, 0x3F, 0x3F, 0x3F, 0x7F, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x7F, 0x3F, 0x3F, 0x3F, 0x1F,
		0x1F, 0x1F, 0x1F, 0x1F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0E, 0x06, 0x00, 0x20, 0x32, 0x3B, 0x1B,
		0x9B, 0xCF, 0xEF, 0x7F, 0xBF, 0xFF, 0x7F, 0x7F, 0x1E, 0x1E, 0x1E, 0x3E, 0x3E, 0xFE, 0xFE, 0xFE,
		0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0x7C, 0x7C, 0x7C, 0x78, 0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x01, 0x01, 0x01, 0x04, 0x06, 0x06, 0x07, 0x07, 0x03,
		0x03, 0x03, 0x03, 0x03, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xF8, 0xF8, 0x38, 0xF8, 0xF0,
		0xE0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xF8, 0xF8, 0x00, 0xE0, 0xF0, 0xF8, 0x38, 0x18, 0x18,
		0x18, 0x18, 0x18, 0x18, 0x18, 0x38, 0xF8, 0xF0, 0x00, 0x00, 0xF8, 0xF8, 0xF8, 0x00, 0x80, 0xC0,
		0xE0, 0xF0, 0x70, 0x38, 0x18, 0x18, 0x00, 0x00, 0x00, 0xF8, 0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00,
		0x80, 0xC0, 0xF0, 0xF8, 0x38, 0x78, 0xF8, 0xF0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x3F,
		0x3F, 0x00, 0x00, 0x01, 0x03, 0x07, 0x1F, 0x3E, 0x3C, 0x38, 0x3F, 0x3F, 0x3F, 0x00, 0x0F, 0x1F,
		0x3F, 0x3C, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x3C, 0x3F, 0x1F, 0x00, 0x00, 0x3F, 0x3F,
		0x3F, 0x01, 0x01, 0x03, 0x07, 0x0F, 0x1E, 0x3C, 0x38, 0x30, 0x20, 0x00, 0x00, 0x3F, 0x3F, 0x3F,
		0x00, 0x20, 0x38, 0x3E, 0x1F, 0x0F, 0x0F, 0x0C, 0x0C, 0x0C, 0x0C, 0x0F, 0x1F, 0x3F, 0x3C, 0x38,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

const unsigned char font5x8[] =
{
	0x00, 0x00, 0x00, 0x00, 0x00,// sp
	0x00, 0x00, 0x2f, 0x00, 0x00,// !
	0x00, 0x07, 0x00, 0x07, 0x00,// "
	0x14, 0x7f, 0x14, 0x7f, 0x14,// #
	0x24, 0x2a, 0x7f, 0x2a, 0x12,// $
	0x62, 0x64, 0x08, 0x13, 0x23,// %
	0x36, 0x49, 0x55, 0x22, 0x50,// &
	0x00, 0x05, 0x03, 0x00, 0x00,// '
	0x00, 0x1c, 0x22, 0x41, 0x00,// (
	0x00, 0x41, 0x22, 0x1c, 0x00,// )
	0x14, 0x08, 0x3E, 0x08, 0x14,// *
	0x08, 0x08, 0x3E, 0x08, 0x08,// +
	0x00, 0x00, 0xA0, 0x60, 0x00,// ,
	0x08, 0x08, 0x08, 0x08, 0x08,// -
	0x00, 0x60, 0x60, 0x00, 0x00,// .
	0x20, 0x10, 0x08, 0x04, 0x02,// /
	0x3E, 0x51, 0x49, 0x45, 0x3E,// 0
	0x00, 0x42, 0x7F, 0x40, 0x00,// 1
	0x42, 0x61, 0x51, 0x49, 0x46,// 2
	0x21, 0x41, 0x45, 0x4B, 0x31,// 3
	0x18, 0x14, 0x12, 0x7F, 0x10,// 4
	0x27, 0x45, 0x45, 0x45, 0x39,// 5
	0x3C, 0x4A, 0x49, 0x49, 0x30,// 6
	0x01, 0x71, 0x09, 0x05, 0x03,// 7
	0x36, 0x49, 0x49, 0x49, 0x36,// 8
	0x06, 0x49, 0x49, 0x29, 0x1E,// 9
	0x00, 0x36, 0x36, 0x00, 0x00,// :
	0x00, 0x56, 0x36, 0x00, 0x00,// ;
	0x08, 0x14, 0x22, 0x41, 0x00,// <
	0x14, 0x14, 0x14, 0x14, 0x14,// =
	0x00, 0x41, 0x22, 0x14, 0x08,// >
	0x02, 0x01, 0x51, 0x09, 0x06,// ?
	0x32, 0x49, 0x59, 0x51, 0x3E,// @
	0x7C, 0x12, 0x11, 0x12, 0x7C,// A
	0x7F, 0x49, 0x49, 0x49, 0x36,// B
	0x3E, 0x41, 0x41, 0x41, 0x22,// C
	0x7F, 0x41, 0x41, 0x22, 0x1C,// D
	0x7F, 0x49, 0x49, 0x49, 0x41,// E
	0x7F, 0x09, 0x09, 0x09, 0x01,// F
	0x3E, 0x41, 0x49, 0x49, 0x7A,// G
	0x7F, 0x08, 0x08, 0x08, 0x7F,// H
	0x00, 0x41, 0x7F, 0x41, 0x00,// I
	0x20, 0x40, 0x41, 0x3F, 0x01,// J
	0x7F, 0x08, 0x14, 0x22, 0x41,// K
	0x7F, 0x40, 0x40, 0x40, 0x40,// L
	0x7F, 0x02, 0x0C, 0x02, 0x7F,// M
	0x7F, 0x04, 0x08, 0x10, 0x7F,// N
	0x3E, 0x41, 0x41, 0x41, 0x3E,// O
	0x7F, 0x09, 0x09, 0x09, 0x06,// P
	0x3E, 0x41, 0x51, 0x21, 0x5E,// Q
	0x7F, 0x09, 0x19, 0x29, 0x46,// R
	0x46, 0x49, 0x49, 0x49, 0x31,// S
	0x01, 0x01, 0x7F, 0x01, 0x01,// T
	0x3F, 0x40, 0x40, 0x40, 0x3F,// U
	0x1F, 0x20, 0x40, 0x20, 0x1F,// V
	0x3F, 0x40, 0x38, 0x40, 0x3F,// W
	0x63, 0x14, 0x08, 0x14, 0x63,// X
	0x07, 0x08, 0x70, 0x08, 0x07,// Y
	0x61, 0x51, 0x49, 0x45, 0x43,// Z
	0x00, 0x7F, 0x41, 0x41, 0x00,// [
	0x55, 0x2A, 0x55, 0x2A, 0x55,// 55
	0x00, 0x41, 0x41, 0x7F, 0x00,// ]
	0x04, 0x02, 0x01, 0x02, 0x04,// ^
	0x40, 0x40, 0x40, 0x40, 0x40,// _
	0x00, 0x01, 0x02, 0x04, 0x00,// '
	0x20, 0x54, 0x54, 0x54, 0x78,// a
	0x7F, 0x48, 0x44, 0x44, 0x38,// b
	0x38, 0x44, 0x44, 0x44, 0x20,// c
	0x38, 0x44, 0x44, 0x48, 0x7F,// d
	0x38, 0x54, 0x54, 0x54, 0x18,// e
	0x08, 0x7E, 0x09, 0x01, 0x02,// f
	0x18, 0xA4, 0xA4, 0xA4, 0x7C,// g
	0x7F, 0x08, 0x04, 0x04, 0x78,// h
	0x00, 0x44, 0x7D, 0x40, 0x00,// i
	0x40, 0x80, 0x84, 0x7D, 0x00,// j
	0x7F, 0x10, 0x28, 0x44, 0x00,// k
	0x00, 0x41, 0x7F, 0x40, 0x00,// l
	0x7C, 0x04, 0x18, 0x04, 0x78,// m
	0x7C, 0x08, 0x04, 0x04, 0x78,// n
	0x38, 0x44, 0x44, 0x44, 0x38,// o
	0xFC, 0x24, 0x24, 0x24, 0x18,// p
	0x18, 0x24, 0x24, 0x18, 0xFC,// q
	0x7C, 0x08, 0x04, 0x04, 0x08,// r
	0x48, 0x54, 0x54, 0x54, 0x20,// s
	0x04, 0x3F, 0x44, 0x40, 0x20,// t
	0x3C, 0x40, 0x40, 0x20, 0x7C,// u
	0x1C, 0x20, 0x40, 0x20, 0x1C,// v
	0x3C, 0x40, 0x30, 0x40, 0x3C,// w
	0x44, 0x28, 0x10, 0x28, 0x44,// x
	0x1C, 0xA0, 0xA0, 0xA0, 0x7C,// y
	0x44, 0x64, 0x54, 0x4C, 0x44,// z
	0x14, 0x14, 0x14, 0x14, 0x14// horiz lines
};

#endif

